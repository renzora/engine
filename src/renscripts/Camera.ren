script CameraController {
  props movement {
    orbit_speed: float {
      default: 1.0,
      min: 0.0,
      max: 5.0,
      description: "Speed of camera orbit"
    }
    
    radius: float {
      default: 10.0,
      min: 2.0,
      max: 50.0,
      description: "Distance from target"
    }
    
    auto_orbit: boolean {
      default: true,
      description: "Enable automatic orbiting"
    }
  }
  
  props view {
    fov: range {
      default: 0.8,
      min: 0.1,
      max: 3.0,
      description: "Field of view (radians)"
    }
    
    target_x: float {
      default: 0.0,
      min: -10.0,
      max: 10.0,
      description: "Target X position"
    }
    
    target_y: float {
      default: 0.0,
      min: -10.0,
      max: 10.0,
      description: "Target Y position"
    }
    
    target_z: float {
      default: 0.0,
      min: -10.0,
      max: 10.0,
      description: "Target Z position"
    }
  }
  
  
  start {
    
    # Set initial values
    set_camera_fov(fov)
    set_camera_radius(radius)
    set_camera_target(target_x, target_y, target_z)
    
    add_tag("camera_controller")
  }
  
  update(dt) {
    
    # Update camera properties
    set_camera_fov(fov)
    set_camera_radius(radius) 
    set_camera_target(target_x, target_y, target_z)
    
    # Simple orbit using built-in rotation
    if (auto_orbit) {
      rotate_by(0, dt * orbit_speed, 0)
    }
  }
}